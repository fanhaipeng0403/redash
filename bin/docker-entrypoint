
#https://yeasy.gitbooks.io/docker_practice/image/dockerfile/entrypoint.html
#应用运行前的准备工作
# 启动容器就是启动主进程，但有些时候，启动主进程前，需要一些准备工作。




#!/bin/bash

set -e
#任何命令出错就立刻exit



worker() {
  WORKERS_COUNT=${WORKERS_COUNT:-2}
  QUEUES=${QUEUES:-queries,scheduled_queries,celery}

  echo "Starting $WORKERS_COUNT workers for queues: $QUEUES..."
  exec /usr/local/bin/celery worker --app=redash.worker -c$WORKERS_COUNT -Q$QUEUES -linfo --maxtasksperchild=10 -Ofair
}

scheduler() {
  WORKERS_COUNT=${WORKERS_COUNT:-1}
  QUEUES=${QUEUES:-celery}

  echo "Starting scheduler and $WORKERS_COUNT workers for queues: $QUEUES..."

  exec /usr/local/bin/celery worker --app=redash.worker --beat -c$WORKERS_COUNT -Q$QUEUES -linfo --maxtasksperchild=10 -Ofair
}

server() {
  exec /usr/local/bin/gunicorn -b 0.0.0.0:5000 --name redash -w${REDASH_WEB_WORKERS:-4} redash.wsgi:app
}

create_db() {
  exec /app/manage.py database create_tables
}

help() {
  echo "Redash Docker."
  echo ""
  echo "Usage:"
  echo ""

  echo "server -- start Redash server (with gunicorn)"
  echo "worker -- start Celery worker"
  echo "scheduler -- start Celery worker with a beat (scheduler) process"
  echo ""
  echo "shell -- open shell"
  echo "dev_server -- start Flask development server with debugger and auto reload"
  echo "create_db -- create database tables"
  echo "manage -- CLI to manage redash"
  echo "tests -- run tests"
}

tests() {
  export REDASH_DATABASE_URL="postgresql://postgres@postgres/tests"

  if [ $# -eq 0 ]; then
    TEST_ARGS=tests/
  else
    TEST_ARGS=$@
  fi
  exec pytest $TEST_ARGS
}


#http://c.biancheng.net/cpp/view/2739.html

#$0	当前脚本的文件名
#$n	传递给脚本或函数的参数。n 是一个数字，表示第几个参数。例如，第一个参数是$1，第二个参数是$2。
#$#	传递给脚本或函数的参数个数。
#$@	传递给脚本或函数的所有参数。被双引号(" ")包含时，与 $* 稍有不同，下面将会讲到。




# case 的用法
#http://c.biancheng.net/cpp/view/7006.html



case "$1" in
  worker)
    shift
    worker
    ;;

  server)
#  shift的用法
#  https://www.jianshu.com/p/b1bf21247831

# 参数数组左移，[1,2,3], shift后，$1是2，$#是2，$@是[2,3]
    shift
    server
    ;;

  scheduler)
    shift
    scheduler
    ;;


  dev_server)
    export FLASK_DEBUG=1
#     monitor Python files for change
    exec /app/manage.py runserver --debugger --reload -h 0.0.0.0
    ;;


  shell)
    exec /app/manage.py shell
    ;;


  create_db)
    create_db
    ;;


  manage)
    shift
    exec /app/manage.py $*
    ;;


  tests)
    shift
#    $@	传递给脚本或函数的所有参数。被双引号(" ")包含时，与 $* 稍有不同，下面将会讲到。
    tests $@
    ;;


  help)
    shift
    help
    ;;
#如果无一匹配模式，使用星号 * 捕获该值，再执行后面的命令。
  *)
    exec "$@"
# 执行参数表示的命令
    ;;

esac



#shift 存疑！！！！！！！！！
